#pragma once
#include "fftw3.h"
#include "EchoSignal.h"
#include "TbSignalDao.h"
#include "TbRecordSignalDao.h"
#include "TbProject.h"
#include "AcquiredSignal.h"
#include "ThreadSafeQueue.h"
#include "Result.h"
#include "TbSensorDao.h"
#include "TbSensor.h"
#include "TbDictionaryDao.h"
#include "TbRecordSignal.h"
class CSensorService 
{
public:
	CSensorService();
	CSensorService(int nsignalBuff);
	~CSensorService();
	
	/**********************************************************************
	功能描述： 随机数组
	输入参数：
	输出参数：
	返 回 值：
	其它说明：
	修改日期 版本号 修改人 修改内容
	----------------------------------------------------------------------
	***********************************************************************/
	void RandArray(double* ptr, size_t length);

	/**********************************************************************
	功能描述： 创造随机数
	输入参数：min -- 最小，max--最大
	输出参数：
	返 回 值：
	其它说明：
	修改日期 版本号 修改人 修改内容
	----------------------------------------------------------------------
	***********************************************************************/
	double randf(double min, double max);
	
	/**********************************************************************
	功能描述：保存采集数据
	输入参数：封装好的signal对象，需要保存的信号队列
	输出参数：
	返 回 值：
	其它说明：
	修改日期 版本号 修改人 修改内容
	----------------------------------------------------------------------
	***********************************************************************/
	Result AddCollectData(TbSignal &signal, ThreadSafeQueue<AcquiredSignal> &collectionData);
	/**********************************************************************
	功能描述：保存数据
	输入参数：当前项目,需要保存的队列集合，需要保存的数量
	输出参数：
	返 回 值：
	其它说明：
	修改日期 版本号 修改人 修改内容
	----------------------------------------------------------------------
	***********************************************************************/
	Result AddSignalData(CString path, CString fileName, ThreadSafeQueue<AcquiredSignal> &collectionData, TbSignal &signal);
	/**********************************************************************
	功能描述：查询采集设备对应的所有传感器
	输入参数：采集设备id
	输出参数：
	返 回 值：
	其它说明：
	修改日期 版本号 修改人 修改内容
	----------------------------------------------------------------------
	***********************************************************************/
	bool GetAllSensorByTestingDeviceId(int testingDeviceId,vector<TbSensor> & sensorVector);
	/**********************************************************************
	功能描述：根据项目id得到所有的传感器参数
	输入参数：
	输出参数：
	返 回 值：
	其它说明：
	修改日期 版本号 修改人 修改内容
	----------------------------------------------------------------------
	***********************************************************************/
	bool GetALLSensorByProjectId(int projectId, std::vector<TbSensor> &vsensorPara);
	/**********************************************************************
	功能描述：保存传感器数据
	输入参数：传感器,需要保存的队列集合，需要保存的数量
	输出参数：
	返 回 值：
	其它说明：
	修改日期 版本号 修改人 修改内容
	----------------------------------------------------------------------
	***********************************************************************/
	bool AddSensor(TbSensor &sensor);
	/**********************************************************************
	功能描述：删除传感器数据
	输入参数：传感器,需要保存的队列集合，需要保存的数量
	输出参数：
	返 回 值：
	其它说明：
	修改日期 版本号 修改人 修改内容
	----------------------------------------------------------------------
	***********************************************************************/
	bool Delete(TbSensor sensor);

protected:

	static HANDLE m_hMsqlMutex;
private:
	//queue<EchoSignal> m_echoSignalQueue; ///回显数据的队列
	EchoSignal m_signal; ///需要回显的数据
	TbSignalDao m_signalDao;
	TbRecordSignalDao m_recordSignalDao;
	TbSensorDao m_sensorDao;
	
};

